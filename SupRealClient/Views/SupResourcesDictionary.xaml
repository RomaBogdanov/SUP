<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:SupRealClient.Behaviour">
    <converters:HeaderToCurrentColumnConverter x:Key="HeaderToCurrentColumnConverter" />
    <converters:SearchValueConverter x:Key="SearchValueConverter" />
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="IsReadOnly">
            <Setter.Value>True</Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SelectionColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <!-- TODO - Кривая реализация. Потом поправить -->
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource HeaderToCurrentColumnConverter}">
                            <Binding RelativeSource="{RelativeSource Self}" />
                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="converters:DataGridTextSearch.IsTextMatch">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource SearchValueConverter}">
                    <Binding RelativeSource="{RelativeSource Self}" Path="Content.Text" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="(converters:DataGridTextSearch.SearchValue)" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="converters:DataGridTextSearch.IsTextMatch" Value="True">
                <Setter Property="Background" Value="Gray" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#CCDAFF" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- TODO - так можно реализовать скрытие строк, но тогда нужно искать по целой строке на вхождение
    И для всех классов IdEntity реализовать метод ToString(), представляющий строку, в которой будет производится поиск
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="converters:DataGridTextSearch.IsTextMatch">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource SearchValueConverter}">
                    <Binding RelativeSource="{RelativeSource Self}" Path="Item" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="(converters:DataGridTextSearch.SearchValue)" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="converters:DataGridTextSearch.IsTextMatch" Value="False">
                <Setter Property="Height" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>-->
    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <TextBox
                        x:Name="PART_TextBox"
                        ToolTip="Выберите дату"
                        Text="{Binding Path=SelectedDate, StringFormat='dd.MM.yyyy', ValidatesOnDataErrors=True,
                        RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>